<?php
use Drupal\Core\Form\FormStateInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function imaginelex_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = is_object($node) ? 'page__' . $node->bundle() : 'page';
  }
  if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical' && $tid = \Drupal::routeMatch()->getRawParameter('taxonomy_term')) {
    $term = Term::load($tid);
    $suggestions[] = 'page__taxonomy__' . $term->getVocabularyId();
  }
}


/**
 * Implements hook_preprocess_page().
 */
function imaginelex_preprocess_page(&$variables) {
  if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical' && $tid = \Drupal::routeMatch()->getRawParameter('taxonomy_term')) {
    $term = Term::load($tid);
    $variables['term'] = $term;
  }
  if ($view_id = \Drupal::routeMatch()->getParameter('view_id')) {
    $args = [
      \Drupal::routeMatch()->getParameter('arg_0'),
      \Drupal::routeMatch()->getParameter('arg_1'),
      \Drupal::routeMatch()->getParameter('arg_2')
    ];

    $view = \Drupal\views\Views::getView($view_id);
    $view->setDisplay('default');
    $view->setArguments($args);
    $view->execute();
    $view_result = $view->result;
    if (!empty($view_result)) {
      foreach ($view->result as $row) {
        $hero = $row->_entity->field_image[0]->target_id;
        $file = \Drupal\file\Entity\File::load($hero);
        $uri = $file->getFileUri();
        $variables['policy_hero'] = $uri;
        $variables['policy_name'] = $row->_relationship_entities['field_policies']->field_short_name->value;
        $variables['title'] = $row->_relationship_entities['field_policies']->field_short_name->value;
      }
    }
  };
}
/**
 * Implements hook_preprocess_views_view_fields().
 */
function imaginelex_preprocess_views_view_fields(&$variables) {
  $view = $variables['view'];
  $row = $variables['row'];

  switch($view->id()) {
    case 'placebuilder';
      if ($view->current_display == 'block_2') {
        $variables['accordion_header_color'] = $row->_entity->field_color->color;
      } else if ($view->current_display == 'block_3') {
        foreach ($view->result as $rid => $row) {
          foreach ($view->field as $fid => $field) {
              $datas[$rid][$fid . '_value'] = $field->getValue($row);
          }
        }
        $variables['accordion_group_color'] = $datas[0]['field_color_value'];
      }
      break;
    default:
      break;
  }
}
/**
 * Implements hook_preprocess_views_accordion_view().
 */
function imaginelex_preprocess_views_accordion_view(&$variables) {
  $view = $variables['view'];
  switch($view->id()) {
    case 'placebuilder';
       if ($view->current_display == 'block_3') {
        foreach ($view->result as $rid => $row) {
          if ($rid == 0) {
            foreach ($view->field as $fid => $field) {
                $datas[$rid][$fid . '_value'] = $field->getValue($row);
            }
          }
        }
        $variables['accordion_group_color'] = $datas[0]['field_color_value'];
      }
      break;
    case 'policy_accordions':
      if ($view->current_display == 'block_1') {
        $node = \Drupal::routeMatch()->getParameter('node');
        if ($color = $node->field_color->color) {
          $variables['accordion_group_color'] = $color;
        };
      }
      break;
    case 'taxonomy_term';
        $variables['accordion_group_color'] = '#75B646';
      break;
    case 'theme_cards';
      if ($view->current_display == 'block_1') {
        foreach ($view->result as $rid => $row) {
          foreach ($view->field as $fid => $field) {
              $datas[$rid][$fid . '_value'] = $field->getValue($row);
          }
        }
        $variables['accordion_group_color'] = $datas[0]['field_color_value'];
      }
      break;
    case 'policies_for_rural_developments';
        $variables['accordion_group_color'] = '#fff';
      break;
    default:
      break;
  }
}
/**
 * Implements hook_preprocess_node().
 */
function imaginelex_preprocess_node(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if (isset($node->field_color) && $color = $node->field_color->color) {
    $variables['border_color'] = $color;
  };
}

